requirejs.config({

	paths : {
		'vlib' : 'core/Vlib',
		'config' : 'config.vlib',
		'pluginLoader' : 'pluginLoader',
		'jquery_ui' : 'libs/jquery-ui/js/jquery-ui-1.10.3.custom.min',
		'jquery' : 'libs/jquery/jquery.min',
		'underscore' : 'libs/underscore/underscore.min',
		'three' : 'libs/three/build/three',
		'three_trackball_controls' : 'libs/three/controls/TrackballControls',
		'three_orbit_controls' : 'libs/three/controls/OrbitAndPanControls',
		'orgChart' : 'libs/jOrgChart/jquery.jOrgChart',
		'bootstrap':'libs/bootstrap/bootstrap.min',
		'd3':'libs/novus/lib/d3.v3',
		'nv':'libs/novus/nv.d3'
		/*
		// SHADER not used
		,
		'convolutionShader':'libs/three/js/shaders/ConvolutionShader',
		'copyshader':'libs/three/js/shaders/CopyShader',
		'fxaashader':'libs/three/js/shaders/FXAAShader',
		'effectcomposer':'libs/three/js/postprocessing/EffectComposer',
		'mastpass':'libs/three/js/postprocessing/MaskPass',
		'rendererpass':'libs/three/js/postprocessing/RenderPass',
		'shaderpass':'libs/three/js/postprocessing/ShaderPass',
		'bloompass':'libs/three/js/postprocessing/BloomPass',
		'savepass':'libs/three/js/postprocessing/SavePass',
		'shaderextras':'libs/three/js/ShaderExtras',
		'additiveblendingshader':'libs/three/js/shaders/AdditiveBlendShader',
		'horizontalblurshader':'libs/three/js/shaders/HorizontalBlurShader',
		'verticalblurshader':'libs/three/js/shaders/VerticalBlurShader'
		*/

	},
	shim : {
		'underscore' : {
			exports : '_'
		},

		'three' : {
			exports : 'THREE'
		},
		/*
		'shaderextras' : {
			exports : 'THREE',
			'deps' : ['three']
		},
		'additiveblendingshader' : {
			exports : 'THREE',
			'deps' : ['three']
		},
		'horizontalblurshader' : {
			exports : 'THREE',
			'deps' : ['three']
		},
		'verticalblurshader' : {
			exports : 'THREE',
			'deps' : ['three']
		},
		'convolutionShader' : {
			exports : 'THREE',
			'deps' : ['three']
		},
		'copyshader' : {
			exports : 'THREE',
			'deps' : ['three']
		},
		'fxaashader' : {
			exports : 'THREE',
			'deps' : ['three']
		},
		'effectcomposer' : {
			exports : 'THREE',
			'deps' : ['three']
		},
		'mastpass' : {
			exports : 'THREE',
			'deps' : ['three']
		},
		'rendererpass' : {
			exports : 'THREE',
			'deps' : ['three']
		},
		'shaderpass' : {
			exports : 'THREE',
			'deps' : ['three']
		},
		'bloompass' : {
			exports : 'THREE',
			'deps' : ['three']
		},
		'savepass' : {
			exports : 'THREE',
			'deps' : ['three']
		},*/
		'three_trackball_controls' : {
			exports : 'THREE',
			'deps' : ['three']
		},
		'three_orbit_controls' : {
			exports : 'THREE',
			'deps' : ['three']
		},
		'jquery_ui' : {
			exports : '$',
			'deps' : ['jquery']
		},
		'orgChart' : {
			exports : '$',
			'deps' : ['jquery']
		},
		'bootstrap' : {
			'deps' : ['jquery']
		},
		'd3':{
			exports: 'd3'
		},
		'nv':{
			'deps' : ['d3'],
			exports: 'd3'
		}

	}
});

/**
 * MAIN EDIT-MODE
 */
 define(function(require) {

 	require(
 		[ 'jquery', 'config'],
 		function($,Config) {

	 	// ************************************************************************
		// INIT LIB
		// ************************************************************************
		var VLib = require('vlib');
		var v = new VLib();
		console.log("VLib version " + v.version);

				// ************************************************************************
				// CALLBACKS
				// ************************************************************************
				var fileUploadCB = function(formId){

					var formData = new FormData($(formId)[0]);
					$.ajax({
						url: 'http://localhost/VLib/server/processFileUpload.php',
						type: 'POST',

						        //Ajax events
						        beforeSend: function(e){},
						        success: function(e){
						        	v.publish(Config.CHANNEL_SUCCESS,'File saved '+e);
						        },
						        error: function(e){
						        	v.publish(Config.CHANNEL_ERROR,'Error occurred during file upload! '+e);
						        },
						        // Form data
						        data: formData,
						        //Options to tell jQuery not to process data or worry about content-type.
						        cache: false,
						        contentType: false,
						        processData: false
						    });


				}
				var fileDeleteCB = function(fileArray){
					alert("DELETE files: "+JSON.stringify(fileArray));
				}
				var deleteTemplateCB = function(template){
					alert('DELETE TEMPLATE CALLBACK in MAIN called: ' +template.name+' '+template.description+" "+template.sceneGraph);
					// ADD AJAX CALL HERE...

					template.action = "delete_t";
					var jsonObj = template;
					var postData = JSON.stringify(jsonObj);
					var postArray = {json:postData};

					$.ajax({
						type: 'POST',
						url: "http://rc.yol.at/wordpress/wp-content/plugins/test/process.php",
						data: postArray,
						success: function(data){
							// ADD AJAX CALL HERE...
							// if OK register template
							v.publish(Config.CHANNEL_SUCCESS,'Template deleted! '+e);
						},
						error: function(e){
							v.publish(Config.CHANNEL_ERROR,'Delete file failed!'+e);
						},
					});

					v.publish(c.CHANNEL_SUCCESS,'Template deleted!');

				}
				var saveTemplateCB = function(template){
					alert('Save TEMPLATE CALLBACK in MAIN called: ' +template.name+' '+template.description+" "+template.sceneGraph);

					template.action = "save";
					var jsonObj = template;
					var postData = JSON.stringify(jsonObj);
					var postArray = {json:postData};

					$.ajax({
						type: 'POST',
						url: "http://rc.yol.at/wordpress/wp-content/plugins/test/process.php",
						data: postArray,
						success: function(data){
							// ADD AJAX CALL HERE...
							// if OK register template
							v.registerTemplate(_.clone(template));
							v.publish(Config.CHANNEL_SUCCESS,'Template saved! '+e);
						},
						error: function(e){
							v.publish(Config.CHANNEL_ERROR,'Save template failed! '+e);
						},
					});



				}
				// ************************************************************************
				// REGISTER CORE MODULES
				// ************************************************************************
				var templates = require('core/modules/templates/templates.vlib');
				var controls = require('core/modules/controls/controls.vlib');
				var toolbox = require('core/modules/toolbox/toolbox.vlib');
				var sceneGraph = require('core/modules/scenegraph/scenegraph.vlib');
				var plotModule = require('core/modules/plot/plot.vlib');
				var plot = new plotModule();

				v.registerModule(templates);
				v.registerModule(controls);
				v.registerModule(toolbox);
				v.registerModule(sceneGraph);
				v.registerModule(plot);

				// ************************************************************************
				// REGISTER DATA FILES
				// TODO: FILLED VIA PHP DATABASE REQUEST
				// ************************************************************************
				var file1 = {
					path 		: 'All_KL_Div.gnuplot.dat',
					name 		: 'all_kv',
					description	: 'Description to all kv...'
				};
				var file2 = {
					path 		: 'All_Success_Stretch.gnuplot.dat',
					name 		: 'all_success',
					description	: 'Description to all success stretch...'
				};
				v.registerFile(file1);
				v.registerFile(file2);

				// ************************************************************************
				// REGISTER templates
				// TODO: FILLED VIA PHP DATABASE REQUEST!
				// ************************************************************************

				var scale_1 = require('templates/t1_scale_test.tmpl.vlib');
				var scatter_1 = require('templates/all_kv_1.tmpl.vlib');
				var line_1= require('templates/t1_line_axes.tmpl.vlib');
				var scatter_2= require('templates/t1_scatter.tmpl.vlib');
				var scatter_3= require('templates/t1_s_f_hm.tmpl.vlib');
				var surface_1= require('templates/t1_surface.tmpl.vlib');
				var all_1= require('templates/t1_all.tmpl.vlib');
				var plane_range_1= require('templates/t1_range_test.tmpl.vlib');
				var plane_range_2= require('templates/t1_range_test_2.tmpl.vlib');
				var plane_range_3 = require('templates/t1_range_test_3.tmpl.vlib');
				var plane_range_4 = require('templates/t1_range_test_4.tmpl.vlib');
				var scatter_perf_1 = require('templates/t1_scatter_perf.tmpl.vlib');
				var surface_perf_1 = require('templates/t1_surface_perf.tmpl.vlib');

				var scatterPerf1 = {
					sceneGraph	: scatter_perf_1,
					name		: 'Scatter Performance 90k',
					description	: 'Scatterplot with 90.000 sprite particles. FUNCTION: sin(sqrt(x^2+y^2))'
				};
				var surfacePerf1 = {
					sceneGraph	: surface_perf_1,
					name		: 'Surface Performance 90k',
					description	: 'Surface with 90.000 sprite particles. FUNCTION: sin(sqrt(x^2+y^2))'
				};

				var scale1 = {
					sceneGraph	: scale_1,
					name		: 'Scale test',
					description	: 'Using scatter,surface and lineplot. x: 0-1,y:0-1. FUN: z = sin(x). POINTS should match!'
				};

				var scatter1 = {
					sceneGraph	: scatter_1,
					name		: 'Scatter test',
					description	: 'description to Scatter test'
				};
				var scatter2 = {
					sceneGraph	: scatter_2,
					name		: 'Scatter test2 ',
					description	: 'Using PLANE and FUNCTION z = sin(x)'
				};
				var scatter3 = {
					sceneGraph	: scatter_3,
					name		: 'Scatter test 3 ',
					description	: 'Using FILE input'
				};
				var line1 = {
					sceneGraph	: line_1,
					name		: 'Line test ',
					description	: 'T1: 3d line and axes using a normal dataset. Show labels == TRUE.'
				};
				var surface1 = {
					sceneGraph	: surface_1,
					name		: 'Surface test ',
					description	: 'T1: 3d surface and axes using a plane dataset. FUNCTION z = cos(x)'
				};
				var all1 = {
					sceneGraph	: all_1,
					name		: 'All in one',
					description	: 'T1: 3d scatter , surface, line'
				};
				var planeRange1 = {
					sceneGraph	: plane_range_1,
					name		: 'Range test (+x +y)',
					description	: ' +x +y'
				};
				var planeRange2 = {
					sceneGraph	: plane_range_2,
					name		: 'Range test (+x -y)',
					description	: ' +x -y'
				};
				var planeRange3 = {
					sceneGraph	: plane_range_3,
					name		: 'Range test (-x -y)',
					description	: ' -x -y'
				};
				var planeRange4 = {
					sceneGraph	: plane_range_4,
					name		: 'Range test (-x +y)',
					description	: ' -x +y'
				};

				v.registerTemplate(_.clone(scale1));
				v.registerTemplate(_.clone(planeRange1));
				v.registerTemplate(_.clone(planeRange2));
				v.registerTemplate(_.clone(planeRange3));
				v.registerTemplate(_.clone(planeRange4));
				v.registerTemplate(_.clone(scatter1));
				v.registerTemplate(_.clone(scatter2));
				v.registerTemplate(_.clone(scatter3));
				v.registerTemplate(_.clone(surface1));
				v.registerTemplate(_.clone(line1));
				v.registerTemplate(_.clone(all1));
				v.registerTemplate(_.clone(scatterPerf1));
				v.registerTemplate(_.clone(surfacePerf1));


				var jsonObj = {"action": "get_t"};
				var postData = JSON.stringify(jsonObj);
				var postArray = {json:postData};

				$.ajax({
					type: 'POST',
					url: "http://rc.yol.at/wordpress/wp-content/plugins/test/process.php",
					data: postArray,
					success: function(data){


						var d = $.parseJSON(data);
						for (var i=0; i < d.length; i++) {

							var templateTmp = {
								sceneGraph	: $.parseJSON(d[i].template_graph),
								name		: d[i].id + "-" +d[i].template_name,
								description	: d[i].template_description
							};
							v.registerTemplate(_.clone(templateTmp));
						}
							// ADD AJAX CALL HERE...

						}
					});
				// ************************************************************************
				// UPLOAD DATA CALLBACK
				// TODO: FILL CALLBACK FUNCTION. JQUERY-POST template & insert into DB
				// ************************************************************************
				v.setUploadDataCallback(fileUploadCB);
				// ************************************************************************
				// DELETE DATA CALLBACK
				// TODO: FILL CALLBACK FUNCTION. JQUERY-POST DELETE FROM DB
				// ************************************************************************
				v.setDeleteDataCallback(fileDeleteCB);
				// ************************************************************************
				// SAVE TEMPLATE CALLBACK
				// TODO: FILL CALLBACK FUNCTION. JQUERY-POST template & insert into DB
				// ************************************************************************
				v.setSaveTemplateCallback(saveTemplateCB);
				// ************************************************************************
				// DELETE TEMPLATE CALLBACK
				// TODO: DELETE DATASET FROM DB
				// ************************************************************************
				v.setDeleteTemplateCallback(deleteTemplateCB);

				// ************************************************************************
				// INIT
				// ************************************************************************
				templates.init('#vTempl');
				controls.init('#vControls');
				sceneGraph.init('#vGraph');
				toolbox.init('#vList');
				plot.init('#vPlot');

				console.log('#######################################');
				console.log('[ main ][channels in use ] '
					+ Object.keys(v.getChannels));
				console.log('[ main ][plugins in use ] '
					+ Object.keys(v.getPlugins));

				console.log("#########################################");
				//v.load(template2);
			});






});
