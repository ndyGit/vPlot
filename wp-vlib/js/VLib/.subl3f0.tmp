requirejs.config({

	paths : {
		'vlib' : 'core/Vlib',
		'config' : 'config.vlib',
		'pluginLoader' : 'pluginLoader',
		'jquery_ui' : 'libs/jquery-ui/js/jquery-ui-1.10.4.custom.min',
		'jquery' : 'libs/jquery/jquery.min',
		'underscore' : 'libs/underscore/underscore.min',
		'three' : 'libs/three/build/three.min',
		'three_trackball_controls' : 'libs/three/controls/TrackballControls',
		'three_orbit_controls' : 'libs/three/controls/OrbitAndPanControls',
		'orgChart' : 'libs/jOrgChart/jquery.jOrgChart',
		'bootstrap':'libs/bootstrap/bootstrap.min',
		'd3':'libs/novus/lib/d3.v3',
		'nv':'libs/novus/nv.d3'

	},
	shim : {
		'underscore' : {
			exports : '_'
		},

		'three' : {
			exports : 'THREE'
		},
		'three_trackball_controls' : {
			exports : 'THREE',
			'deps' : ['three']
		},
		'three_orbit_controls' : {
			exports : 'THREE',
			'deps' : ['three']
		},
		'jquery_ui' : {
			exports : '$',
			'deps' : ['jquery']
		},
		'orgChart' : {
			exports : '$',
			'deps' : ['jquery']
		},
		'bootstrap' : {
			'deps' : ['jquery']
		},
		'd3':{
			exports: 'd3'
		},
		'nv':{
			'deps' : ['d3'],
			exports: 'd3'
		}

	}
});

/**
 * MAIN EDIT-MODE
 */
 define(function(require) {

 	require(
 		[ 'jquery', 'config'],
 		function($,Config) {

	 	// ************************************************************************
		// INIT LIB
		// ************************************************************************
		var VLib = require('vlib');
		var v = new VLib();
		console.log("VLib version " + v.version);

				// ************************************************************************
				// CALLBACKS
				// ************************************************************************
				var fileUploadCB = function(formId){

					var formData = new FormData($(formId)[0]);
					$.ajax({
						url: 'http://localhost/VLib/server/processFileUpload.php',
						type: 'POST',

						        //Ajax events
						        beforeSend: function(e){},
						        success: function(e){
						        	v.publish(Config.CHANNEL_SUCCESS,'File saved '+e);
						        },
						        error: function(e){
						        	v.publish(Config.CHANNEL_ERROR,'Error occurred during file upload! '+e);
						        },
						        // Form data
						        data: formData,
						        //Options to tell jQuery not to process data or worry about content-type.
						        cache: false,
						        contentType: false,
						        processData: false
						    });


				}

				var deleteTemplateCB = function(template){
					alert('DELETE TEMPLATE CALLBACK in MAIN called: ' +template.name+' '+template.description+" "+template.sceneGraph);
					// ADD AJAX CALL HERE...

					template.action = "delete_t";
					var jsonObj = template;
					var postData = JSON.stringify(jsonObj);
					var postArray = {json:postData};

					$.ajax({
						type: 'POST',
						url: "http://rc.yol.at/wordpress/wp-content/plugins/test/process.php",
						data: postArray,
						success: function(data){
							// ADD AJAX CALL HERE...
							// if OK register template
							v.publish(Config.CHANNEL_SUCCESS,'Template deleted! '+e);
						},
						error: function(e){
							v.publish(Config.CHANNEL_ERROR,'Delete file failed!'+e);
						},
					});

					v.publish(c.CHANNEL_SUCCESS,'Template deleted!');

				}
				var saveTemplateCB = function(template){
					alert('Save TEMPLATE CALLBACK in MAIN called: ' +template.name+' '+template.description+" "+template.sceneGraph);

					template.action = "save";
					var jsonObj = template;
					var postData = JSON.stringify(jsonObj);
					var postArray = {json:postData};

					$.ajax({
						type: 'POST',
						url: "http://rc.yol.at/wordpress/wp-content/plugins/test/process.php",
						data: postArray,
						success: function(data){
							// ADD AJAX CALL HERE...
							// if OK register template
							v.registerTemplate(_.clone(template));
							v.publish(Config.CHANNEL_SUCCESS,'Template saved! '+e);
						},
						error: function(e){
							v.publish(Config.CHANNEL_ERROR,'Save template failed! '+e);
						},
					});



				}
				// ************************************************************************
				// REGISTER CORE MODULES
				// ************************************************************************
				var templates = require('core/modules/templates/templates.vlib');
				var controls = require('core/modules/controls/controls.vlib');
				var toolbox = require('core/modules/toolbox/toolbox.vlib');
				var sceneGraph = require('core/modules/scenegraph/scenegraph.vlib');
				var plotModule = require('core/modules/plot/plot.vlib');
				var plot = new plotModule();

				v.registerModule(templates);
				v.registerModule(controls);
				v.registerModule(toolbox);
				v.registerModule(sceneGraph);
				v.registerModule(plot);

				// ************************************************************************
				// REGISTER DATA FILES
				// TODO: FILLED VIA PHP DATABASE REQUEST
				// ************************************************************************
				var file1 = {
					path 		: 'All_KL_Div.gnuplot.dat',
					name 		: 'all_kv',
					description	: 'Description to all kv...'
				};
				var file2 = {
					path 		: 'All_Success_Stretch.gnuplot.dat',
					name 		: 'all_success',
					description	: 'Description to all success stretch...'
				};
				v.registerFile(file1);
				v.registerFile(file2);

				// ************************************************************************
				// REGISTER templates
				// TODO: FILLED VIA PHP DATABASE REQUEST!
				// ************************************************************************
				var test1 = require('templates/smiley.tmpl.vlib');
				var test2 = require('templates/all_kv_1.tmpl.vlib');
				var template1 = {
					sceneGraph	: test1,
					name		: 'test1',
					description	: 'Demo 1. Surfaceplot + Scatterplot. Dataset = allkv.dat'
				};
				var template2 = {
					sceneGraph	: test2,
					name		: 'test2',
					description	: 'description to test2'
				};
				v.registerTemplate(_.clone(template1));
				v.registerTemplate(_.clone(template2));




				var jsonObj = {"action": "get_t"};
				var postData = JSON.stringify(jsonObj);
				var postArray = {json:postData};

				$.ajax({
					type: 'POST',
					url: "http://rc.yol.at/wordpress/wp-content/plugins/test/process.php",
					data: postArray,
					success: function(data){


						var d = $.parseJSON(data);
						for (var i=0; i < d.length; i++) {

							var templateTmp = {
								sceneGraph	: $.parseJSON(d[i].template_graph),
								name		: d[i].id + "-" +d[i].template_name,
								description	: d[i].template_description
							};
							v.registerTemplate(_.clone(templateTmp));
						}
							// ADD AJAX CALL HERE...

						}
					});
				// ************************************************************************
				// UPLOAD DATA CALLBACK
				// TODO: FILL CALLBACK FUNCTION. JQUERY-POST template & insert into DB
				// ************************************************************************
				v.setUploadDataCallback(fileUploadCB);
				// ************************************************************************
				// SAVE TEMPLATE CALLBACK
				// TODO: FILL CALLBACK FUNCTION. JQUERY-POST template & insert into DB
				// ************************************************************************
				v.setSaveTemplateCallback(saveTemplateCB);
				// ************************************************************************
				// DELETE TEMPLATE CALLBACK
				// TODO: DELETE DATASET FROM DB
				// ************************************************************************
				v.setDeleteTemplateCallback(deleteTemplateCB);

				// ************************************************************************
				// INIT
				// ************************************************************************
				templates.init('#vTempl');
				controls.init('#vControls');
				sceneGraph.init('#vGraph');
				toolbox.init('#vList');
				plot.init('#vPlot');

				console.log('#######################################');
				console.log('[ main ][channels in use ] '
					+ Object.keys(v.getChannels));
				console.log('[ main ][plugins in use ] '
					+ Object.keys(v.getPlugins));

				console.log("#########################################");
				//v.load(template2);
			});






});
