<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>../plugins/plugins_3d/cameraControl/cameraControl.vlib.js</title>
    <link rel="stylesheet" href="http://yui.yahooapis.com/3.9.1/build/cssgrids/cssgrids-min.css">
    <link rel="stylesheet" href="../assets/vendor/prettify/prettify-min.css">
    <link rel="stylesheet" href="../assets/css/main.css" id="site_styles">
    <link rel="shortcut icon" type="image/png" href="../assets/favicon.png">
    <script src="http://yui.yahooapis.com/combo?3.9.1/build/yui/yui-min.js"></script>
</head>
<body class="yui3-skin-sam">

<div id="doc">
    <div id="hd" class="yui3-g header">
        <div class="yui3-u-3-4">
            
                <h1><img src="../assets/css/logo.png" title=""></h1>
            
        </div>
        <div class="yui3-u-1-4 version">
            <em>API Docs for: </em>
        </div>
    </div>
    <div id="bd" class="yui3-g">

        <div class="yui3-u-1-4">
            <div id="docs-sidebar" class="sidebar apidocs">
                <div id="api-list">
    <h2 class="off-left">APIs</h2>
    <div id="api-tabview" class="tabview">
        <ul class="tabs">
            <li><a href="#api-classes">Classes</a></li>
            <li><a href="#api-modules">Modules</a></li>
        </ul>

        <div id="api-tabview-filter">
            <input type="search" id="api-filter" placeholder="Type to filter APIs">
        </div>

        <div id="api-tabview-panel">
            <ul id="api-classes" class="apis classes">
            
                <li><a href="../classes/AbstractPlugin.html">AbstractPlugin</a></li>
            
                <li><a href="../classes/Config.html">Config</a></li>
            
                <li><a href="../classes/Controls.html">Controls</a></li>
            
                <li><a href="../classes/Plot.html">Plot</a></li>
            
                <li><a href="../classes/Plugin 3D.html">Plugin 3D</a></li>
            
                <li><a href="../classes/Plugin Axes.html">Plugin Axes</a></li>
            
                <li><a href="../classes/Plugin BasicMaterial.html">Plugin BasicMaterial</a></li>
            
                <li><a href="../classes/Plugin CameraControl.html">Plugin CameraControl</a></li>
            
                <li><a href="../classes/Plugin Color.html">Plugin Color</a></li>
            
                <li><a href="../classes/Plugin Dataset.html">Plugin Dataset</a></li>
            
                <li><a href="../classes/Plugin File.html">Plugin File</a></li>
            
                <li><a href="../classes/Plugin Function.html">Plugin Function</a></li>
            
                <li><a href="../classes/Plugin Heatmap.html">Plugin Heatmap</a></li>
            
                <li><a href="../classes/Plugin Light.html">Plugin Light</a></li>
            
                <li><a href="../classes/Plugin LinePlot.html">Plugin LinePlot</a></li>
            
                <li><a href="../classes/Plugin Plane.html">Plugin Plane</a></li>
            
                <li><a href="../classes/Plugin ScatterPlot.html">Plugin ScatterPlot</a></li>
            
                <li><a href="../classes/Plugin SurfacePlot.html">Plugin SurfacePlot</a></li>
            
                <li><a href="../classes/Plugin WireframeMaterial.html">Plugin WireframeMaterial</a></li>
            
                <li><a href="../classes/SceneGraph.html">SceneGraph</a></li>
            
                <li><a href="../classes/Templates.html">Templates</a></li>
            
                <li><a href="../classes/Toolbox.html">Toolbox</a></li>
            
                <li><a href="../classes/UTILS.html">UTILS</a></li>
            
                <li><a href="../classes/VLib.html">VLib</a></li>
            
                <li><a href="../classes/VMediator.html">VMediator</a></li>
            
            </ul>

            <ul id="api-modules" class="apis modules">
            
                <li><a href="../modules/Controls.html">Controls</a></li>
            
                <li><a href="../modules/main.html">main</a></li>
            
                <li><a href="../modules/Plot.html">Plot</a></li>
            
                <li><a href="../modules/SceneGraph.html">SceneGraph</a></li>
            
                <li><a href="../modules/Templates.html">Templates</a></li>
            
                <li><a href="../modules/Toolbox.html">Toolbox</a></li>
            
                <li><a href="../modules/VLib.html">VLib</a></li>
            
            </ul>
        </div>
    </div>
</div>

            </div>
        </div>
        <div class="yui3-u-3-4">
                <div id="api-options">
        Show:
        <label for="api-show-inherited">
            <input type="checkbox" id="api-show-inherited" checked>
            Inherited
        </label>

        <label for="api-show-protected">
            <input type="checkbox" id="api-show-protected">
            Protected
        </label>

        <label for="api-show-private">
            <input type="checkbox" id="api-show-private">
            Private
        </label>
        <label for="api-show-deprecated">
            <input type="checkbox" id="api-show-deprecated">
            Deprecated
        </label>

    </div>


            <div class="apidocs">
                <div id="docs-main">
                    <div class="content">
                        <h1 class="file-heading">File: ../plugins/plugins_3d/cameraControl/cameraControl.vlib.js</h1>

<div class="file">
    <pre class="code prettyprint linenums">
define([ &#x27;require&#x27;, &#x27;config&#x27;, &#x27;jquery&#x27;, &#x27;three&#x27;,&#x27;three_trackball_controls&#x27;,&#x27;three_orbit_controls&#x27; ], function(require, Config) {
	/**
			TODO&lt;br /&gt;
			@class Plugin CameraControl
			@constructor
			@extends AbstractPlugin
			**/
			var plugin = (function() {
				this.context = Config.PLUGINTYPE.CONTEXT_3D;
				this.type = Config.PLUGINTYPE.CAMERA;
				this.icon = Config.absPlugins + &#x27;/plugins_3d/cameraControl/icon.png&#x27;;
				this.name = &#x27;cameraControl&#x27;;
				this.config = null;
				this.accepts = {
					predecessors : [ Config.PLUGINTYPE.CONTEXT_3D ],
					successors : []
				}
				/** path to plugin-template file * */
				this.templates = Config.absPlugins+ &#x27;/plugins_3d/cameraControl/templates.js&#x27;;
				this.description = &#x27;Requires: [ &#x27;+this.accepts.predecessors.join(&#x27;, &#x27;)+&#x27; ] Accepts: [ &#x27;+this.accepts.successors.join(&#x27;, &#x27;)+&#x27; ]&#x27;;
		/**
		 * Takes arguments from config and inserts them to the
		 * plugin-template
		 *
		 * @param config
		 *            plugin config file
		 * @param containerId
		 *            parent container where the plugin-template got
		 *            added
		 */
		 this.setConfigCallback = function(config, containerId) {
		 	console.log(&quot;[ cameraControl ][setConfig] &quot; + JSON.stringify(config));
		 	this.config = config;
		 	if(config === undefined || config == &quot;&quot;){
		 		config = {};
		 	}
		 	if(config.pos === undefined){
		 		config.pos = {x:0,y:0,z:0};
		 	}
		 	if(config.pos !== undefined){
		 		//Pivot point
		 		if(config.pos.x !== undefined){
		 			$(&#x27;#&#x27; + containerId).find(&#x27;#pos-x&#x27;).val(config.pos.x);
		 		}else{
		 			$(&#x27;#&#x27; + containerId).find(&#x27;#pos-x&#x27;).val(0);
		 		}
		 		if(config.pos.y !== undefined){
		 			$(&#x27;#&#x27; + containerId).find(&#x27;#pos-y&#x27;).val(config.pos.y);
		 		}else{
		 			$(&#x27;#&#x27; + containerId).find(&#x27;#pos-y&#x27;).val(0);
		 		}
		 		if(config.pos.z !== undefined){
		 			$(&#x27;#&#x27; + containerId).find(&#x27;#pos-z&#x27;).val(config.pos.z);
		 		}else{
		 			$(&#x27;#&#x27; + containerId).find(&#x27;#pos-z&#x27;).val(0);
		 		}

		 		//Type
		 		if (config.controlType != undefined) {
		 			$(&#x27;#&#x27; + containerId + &#x27; #controlType&#x27;).val(
		 				config.controlType);
		 			$(&#x27;#&#x27; + containerId + &#x27; #controlTypeSelect&#x27;).find(&#x27;option[value=&quot;&#x27;+config.controlType+&#x27;&quot;]&#x27;).attr(&#x27;selected&#x27;, &#x27;selected&#x27;);
		 		}else{
		 			$(&#x27;#&#x27; + containerId + &#x27; #controlTypeSelect&#x27;).find(&#x27;option[value=&quot;trackball&quot;]&#x27;).attr(&#x27;selected&#x27;, &#x27;selected&#x27;);
		 			$(&#x27;#&#x27; + containerId + &#x27; #controlType&#x27;).val(&#x27;trackball&#x27;);
		 		}

		 		if(config.rotateSpeed !== undefined){
		 			$(&#x27;#&#x27; + containerId).find(&#x27;#rotateSpeed&#x27;).val(config.rotateSpeed);
		 		}else{
		 			$(&#x27;#&#x27; + containerId).find(&#x27;#rotateSpeed&#x27;).val(1);
		 		}

		 		if(config.zoomSpeed !== undefined){
		 			$(&#x27;#&#x27; + containerId).find(&#x27;#zoomSpeed&#x27;).val(config.zoomSpeed);
		 		}else{
		 			$(&#x27;#&#x27; + containerId).find(&#x27;#zoomSpeed&#x27;).val(1);
		 		}
		 	}
		 	// controlType change handler
		 	$(&#x27;#&#x27; + containerId ).find(&#x27; #controlTypeSelect&#x27;).change(function(){
		 		var selected = $(this).find(&#x27;option:selected&#x27;);
		 		$(&#x27;#&#x27; + containerId ).find(&#x27; #controlType&#x27;).val(selected.val());
		 	});
		 }
		 this.getConfigCallback = function(containerId) {
		 	var x = $(&#x27;#&#x27; + containerId).find(&#x27;#pos-x&#x27;).val();
		 	var y = $(&#x27;#&#x27; + containerId).find(&#x27;#pos-y&#x27;).val();
		 	var z = $(&#x27;#&#x27; + containerId).find(&#x27;#pos-z&#x27;).val();

		 	var controlType = $(&#x27;#&#x27; + containerId).find(&#x27;#controlType&#x27;).val();
		 	if(controlType == &#x27;&#x27;)
		 		controlType = &#x27;trackingball&#x27;;

		 	var rotateSpeed = $(&#x27;#&#x27; + containerId).find(&#x27;#rotateSpeed&#x27;).val();
		 	var zoomSpeed = $(&#x27;#&#x27; + containerId).find(&#x27;#zoomSpeed&#x27;).val();
		 	var result = {
		 		controlType : controlType,
		 		pos : {
		 			x : x === &quot;&quot; ? 0 : x,
		 			y : y === &quot;&quot; ? 0 : y,
		 			z : z === &quot;&quot; ? 0 : z
		 		},
		 		rotateSpeed : rotateSpeed,
		 		zoomSpeed : zoomSpeed
		 	};
		 	console.log(&quot;[ cameraControl ][getConfig] &quot; + JSON.stringify(result));
		 	return result;
		 }
		/**
		 * config = object config.controlType = (trackball||orbit) default =
		 * trackball
		 *
		 * config.pos = object = camera position config.pos.x config.pos.y
		 * config.pos.z
		 */
		 this.exec = function(c, childs) {
		 	console.log(&quot;   EXEC cameraControler &quot;);

		 	this.config = c;

		 	return {
		 		pType: this.type,
		 		response : {
		 			&#x27;callback&#x27; : this.cameraControlCallback,
		 			&#x27;callbackObj&#x27; : this
		 		}
		 	};

		 }
		 this.cameraControlCallback = function(camera, renderer, container) {

		 	var controls = null;
		 	if (this.config.hasOwnProperty(&#x27;controlType&#x27;)) {
		 		if (&#x27;orbit&#x27; === this.config.controlType) {
		 			controls = new THREE.OrbitAndPanControls(camera,
		 				renderer.domElement);
		 		} else {
		 			var c = $(container).get(0);
		 			controls = new THREE.TrackballControls(camera, c);
		 		}
		 	}else{
				// DEFAULT
				var c = $(container).get(0);

				controls = new THREE.TrackballControls(camera, c);
			}
			var posX, posY, posZ;
			if (this.config.pos === undefined) {
				posX = posY = posZ = 0;
			} else {
				posX = this.config.pos.x == undefined ? 0 : parseFloat(this.config.pos.x);
				posY = this.config.pos.y == undefined ? 0 : parseFloat(this.config.pos.y);
				posZ = this.config.pos.z == undefined ? 0 : parseFloat(this.config.pos.z);
			}
			var rotateSpeed = 1.2;
			if (this.config.rotateSpeed !== undefined) {
				rotateSpeed = this.config.rotateSpeed
			}
			var zoomSpeed = 1.2;
			if (this.config.zoomSpeed !== undefined) {
				zoomSpeed = this.config.zoomSpeed
			}
			controls.target.set(posX, posY, posZ);
			controls.rotateSpeed = rotateSpeed;
			controls.zoomSpeed = zoomSpeed;
			controls.panSpeed = 0.8;
			controls.noZoom = false;
			controls.noPan = false;
			controls.staticMoving = false;
			controls.dynamicDampingFactor = 1;
			controls.keys = [ 65, 83, 68 ];
			controls.lookVertical = true;
			controls.lookSpeed = 0.125;

			return controls;
		}

	});

return plugin;

});

    </pre>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="../assets/vendor/prettify/prettify-min.js"></script>
<script>prettyPrint();</script>
<script src="../assets/js/yui-prettify.js"></script>
<script src="../assets/../api.js"></script>
<script src="../assets/js/api-filter.js"></script>
<script src="../assets/js/api-list.js"></script>
<script src="../assets/js/api-search.js"></script>
<script src="../assets/js/apidocs.js"></script>
</body>
</html>
