<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>../plugins/plugins_2d/linechart/linechart.vlib.js</title>
    <link rel="stylesheet" href="http://yui.yahooapis.com/3.9.1/build/cssgrids/cssgrids-min.css">
    <link rel="stylesheet" href="../assets/vendor/prettify/prettify-min.css">
    <link rel="stylesheet" href="../assets/css/main.css" id="site_styles">
    <link rel="shortcut icon" type="image/png" href="../assets/favicon.png">
    <script src="http://yui.yahooapis.com/combo?3.9.1/build/yui/yui-min.js"></script>
</head>
<body class="yui3-skin-sam">

<div id="doc">
    <div id="hd" class="yui3-g header">
        <div class="yui3-u-3-4">
            
                <h1><img src="../assets/css/logo.png" title=""></h1>
            
        </div>
        <div class="yui3-u-1-4 version">
            <em>API Docs for: </em>
        </div>
    </div>
    <div id="bd" class="yui3-g">

        <div class="yui3-u-1-4">
            <div id="docs-sidebar" class="sidebar apidocs">
                <div id="api-list">
    <h2 class="off-left">APIs</h2>
    <div id="api-tabview" class="tabview">
        <ul class="tabs">
            <li><a href="#api-classes">Classes</a></li>
            <li><a href="#api-modules">Modules</a></li>
        </ul>

        <div id="api-tabview-filter">
            <input type="search" id="api-filter" placeholder="Type to filter APIs">
        </div>

        <div id="api-tabview-panel">
            <ul id="api-classes" class="apis classes">
            
                <li><a href="../classes/AbstractPlugin.html">AbstractPlugin</a></li>
            
                <li><a href="../classes/Config.html">Config</a></li>
            
                <li><a href="../classes/Controls.html">Controls</a></li>
            
                <li><a href="../classes/Plot.html">Plot</a></li>
            
                <li><a href="../classes/Plugin 3D.html">Plugin 3D</a></li>
            
                <li><a href="../classes/Plugin Axes.html">Plugin Axes</a></li>
            
                <li><a href="../classes/Plugin BasicMaterial.html">Plugin BasicMaterial</a></li>
            
                <li><a href="../classes/Plugin CameraControl.html">Plugin CameraControl</a></li>
            
                <li><a href="../classes/Plugin Color.html">Plugin Color</a></li>
            
                <li><a href="../classes/Plugin Dataset.html">Plugin Dataset</a></li>
            
                <li><a href="../classes/Plugin File.html">Plugin File</a></li>
            
                <li><a href="../classes/Plugin Function.html">Plugin Function</a></li>
            
                <li><a href="../classes/Plugin Heatmap.html">Plugin Heatmap</a></li>
            
                <li><a href="../classes/Plugin Light.html">Plugin Light</a></li>
            
                <li><a href="../classes/Plugin LinePlot.html">Plugin LinePlot</a></li>
            
                <li><a href="../classes/Plugin Plane.html">Plugin Plane</a></li>
            
                <li><a href="../classes/Plugin ScatterPlot.html">Plugin ScatterPlot</a></li>
            
                <li><a href="../classes/Plugin SurfacePlot.html">Plugin SurfacePlot</a></li>
            
                <li><a href="../classes/Plugin WireframeMaterial.html">Plugin WireframeMaterial</a></li>
            
                <li><a href="../classes/SceneGraph.html">SceneGraph</a></li>
            
                <li><a href="../classes/Templates.html">Templates</a></li>
            
                <li><a href="../classes/Toolbox.html">Toolbox</a></li>
            
                <li><a href="../classes/UTILS.html">UTILS</a></li>
            
                <li><a href="../classes/VLib.html">VLib</a></li>
            
                <li><a href="../classes/VMediator.html">VMediator</a></li>
            
            </ul>

            <ul id="api-modules" class="apis modules">
            
                <li><a href="../modules/Controls.html">Controls</a></li>
            
                <li><a href="../modules/main.html">main</a></li>
            
                <li><a href="../modules/Plot.html">Plot</a></li>
            
                <li><a href="../modules/SceneGraph.html">SceneGraph</a></li>
            
                <li><a href="../modules/Templates.html">Templates</a></li>
            
                <li><a href="../modules/Toolbox.html">Toolbox</a></li>
            
                <li><a href="../modules/VLib.html">VLib</a></li>
            
            </ul>
        </div>
    </div>
</div>

            </div>
        </div>
        <div class="yui3-u-3-4">
                <div id="api-options">
        Show:
        <label for="api-show-inherited">
            <input type="checkbox" id="api-show-inherited" checked>
            Inherited
        </label>

        <label for="api-show-protected">
            <input type="checkbox" id="api-show-protected">
            Protected
        </label>

        <label for="api-show-private">
            <input type="checkbox" id="api-show-private">
            Private
        </label>
        <label for="api-show-deprecated">
            <input type="checkbox" id="api-show-deprecated">
            Deprecated
        </label>

    </div>


            <div class="apidocs">
                <div id="docs-main">
                    <div class="content">
                        <h1 class="file-heading">File: ../plugins/plugins_2d/linechart/linechart.vlib.js</h1>

<div class="file">
    <pre class="code prettyprint linenums">
define(
	[ &#x27;require&#x27;, &#x27;config&#x27;, &#x27;jquery&#x27;,&#x27;underscore&#x27;,&#x27;d3&#x27;,&#x27;nv&#x27; ],
	function(require, Config, $,_) {


		var plugin = (function(state) {

			/** ********************************** */
			/** PRIVATE VARIABLES * */
			/** ********************************** */
			var sceneHeightDefault = &#x27;auto&#x27;;
			var sceneWidthDefault = &#x27;auto&#x27;;
			var container = &#x27;body&#x27;;


			if(state !== undefined){
				sceneHeightDefault = state.sceneHeightDefault;
				sceneWidthDefault = state.sceneWidthDefault;
				container = state.container;


			}
			/** ********************************** */
			/** PUBLIC VARIABLES * */
			/** ********************************** */

			this.context = Config.PLUGINTYPE.CONTEXT_2D;
			this.type = Config.PLUGINTYPE.PLOT;
			/** unique plugin name * */
			this.name = &#x27;linechart&#x27;;
			/** path to plugin-template file * */
			this.templates = Config.absPlugins
			+ &#x27;/plugins_2d/linechart/templates.js&#x27;;
			this.icon = Config.absPlugins
			+ &#x27;/plugins_2d/linechart/icon.png&#x27;;
			this.accepts = {
				predecessors : [ Config.PLUGINTYPE.CONTEXT_2D ],
				successors : [ Config.PLUGINTYPE.DATA ]
			}
			this.description = &#x27;Requires: [ &#x27;+this.accepts.predecessors.join(&#x27;, &#x27;)+&#x27; ] Accepts: [ &#x27;+this.accepts.successors.join(&#x27;, &#x27;)+&#x27; ]&#x27;;

			this.data = [];
			this.chart = null;

			/** ********************************** */
			/** PUBLIC METHODS * */
			/** ********************************** */
			this.deepCopy = function(){
				var privates = {
					sceneHeightDefault	: sceneHeightDefault,
					sceneWidthDefault 	: sceneWidthDefault,
					container			: container,

							// no need to copy state of intersection stuff. they are just short-time buffers
						};
						return new plugin(privates);
					}
				/**
				 * Takes inserted configuration from the plugin-template and
				 * returns the parameters as JSON-config-file
				 *
				 * @param containerId
				 *            parent container where the plugin-template got
				 *            added
				 *
				 * @return config file format:
				 *         {camera:{x:VALUE,y:VALUE,z:VALUE}}
				 */
				 this.getConfigCallback = function(containerId) {
				 	var sceneWidth = $(
				 		&#x27;#&#x27; + containerId + &#x27; &gt; form input[id=sceneWidth]&#x27;)
				 	.val();
				 	var sceneHeight = $(
				 		&#x27;#&#x27; + containerId + &#x27; &gt; form input[id=sceneHeight]&#x27;)
				 	.val();

				 	var result = {
				 		scene : {
				 			width : sceneWidth,
				 			height : sceneHeight
				 		}
				 	};
				 	console.log(&quot;[ 2d ][getConfig] &quot; + JSON.stringify(result));
				 	return result;
				 }
				/**
				 * Takes arguments from config and inserts them to the
				 * plugin-template
				 *
				 * @param config
				 *            plugin config file
				 * @param containerId
				 *            parent container where the plugin-template got
				 *            added
				 */
				 this.setConfigCallback = function(config, containerId) {
				 	console.log(&quot;[ 2d ][setConfig] &quot; );
				 	if (config == &quot;&quot;)
				 		config = {
				 			scene : &#x27;&#x27;
				 		};

				 		if (config.scene.width != undefined) {
				 			$(&#x27;#&#x27; + containerId + &#x27; &gt; form input[id=sceneWidth]&#x27;)
				 			.val(config.scene.width);
				 		} else {
				 			$(&#x27;#&#x27; + containerId + &#x27; &gt; form input[id=sceneWidth]&#x27;)
				 			.val(sceneWidthDefault);
				 		}
				 		if (config.scene.height != undefined) {
				 			$(&#x27;#&#x27; + containerId + &#x27; &gt; form input[id=sceneHeight]&#x27;)
				 			.val(config.scene.height);
				 		} else {
				 			$(&#x27;#&#x27; + containerId + &#x27; &gt; form input[id=sceneHeight]&#x27;)
				 			.val(sceneHeightDefault);
				 		}

				 	}

				 	this.exec = function(config, childs) {

				 		console.log(&quot;[ linechart ] \t\t EXEC&quot;);

				 		require([ &#x27;libs/novus/src/models/legend&#x27; ]);
				 		require([ &#x27;libs/novus/src/tooltip&#x27; ]);
				 		require([ &#x27;libs/novus/src/models/axis&#x27; ]);
				 		require([ &#x27;libs/novus/src/models/line&#x27; ]);
				 		require([ &#x27;libs/novus/src/models/scatter&#x27; ]);
				 		require([ &#x27;libs/novus/src/models/linePlusBarChart&#x27; ]);
				 		require([ &#x27;libs/novus/src/models/multiChart&#x27; ]);
				 		require([ &#x27;libs/novus/src/models/multiBar&#x27; ]);

				 		this.data = [];


					//HANDLE CHIDLS...
					var child;
					for ( var i = 0; i &lt; childs.length; ++i) {
						child = childs[i];
						if(child !== undefined &amp;&amp; child.pType !== undefined){
							if($.inArray(child.pType, this.accepts.successors) != -1){
								switch(child.pType){
									case Config.PLUGINTYPE.DATA:
									this.data = this.data.concat(child.response.context.data);
									console.log(&quot;--------------&quot;);
									console.log(JSON.stringify(this.data));
									console.log(&quot;--------------&quot;);
									break;
								}
							}
						}else{
							console.log(&quot;pType of child plugin not set!&quot;);
						}
					}
					// each child is the result of a successor plugin
					// for ( var i = 0; i &lt; childs.length; ++i) {

					// 	for ( var key in childs[i]) {

					// 		// just iterate over &quot;own&quot; keys and ignore
					// 		// prototypes
					// 		// check if child is in successor list
					// 		if ($.inArray(key, this.accepts.successors) != -1) {

					// 			if (key === Config.PLUGINTYPE.DATA) {
					// 				this.data = this.data.concat(childs[i][key].context.data);
					// 				console.log(&quot;--------------&quot;);
					// 				console.log(JSON.stringify(this.data));
					// 				console.log(&quot;--------------&quot;);
					// 			}
					// 		}
					// 	}
					// }


					if(this.data.length == 0) return;




					return {
						pType : this.type,
						response : {
							generate: callback_fct,
							context: this
						}

					};

				}



				/** ********************************** */
				/** PRIVATE METHODS * */
				/** ********************************** */
				var callback_fct = function(container) {
					console.log(&quot;caller &quot;+this.name+&quot; w:&quot;+container.width()+&quot; h:&quot;+container.height());
					console.log(&quot;this.data &gt;&gt; &quot;+JSON.stringify(this.data));
					this.chart = nv.models.linePlusBarChart()
					.width(container.width())
					.height(container.height())
					.margin({top: 30, right: 60, bottom: 50, left: 70})
					.x(function(d,i) { return i })
					.color(d3.scale.category10().range());


					axesCallback(this.chart);
					d3.select(&#x27;#&#x27;+container.attr(&#x27;id&#x27;) +&#x27; svg&#x27;)
					.attr(&#x27;width&#x27;, container.width())
					.attr(&#x27;height&#x27;,container.height())
					.datum(this.data)
					.transition().duration(500)
					.call(this.chart);
					return this.chart;
				}
				/*
				* default implementation
				* will be overwritten by axes plugin
				*/
				var axesCallback = function(chart){
					chart.xAxis
					.axisLabel(&quot;x - number of nodes&quot;);

				}


			});

return plugin;
});

    </pre>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="../assets/vendor/prettify/prettify-min.js"></script>
<script>prettyPrint();</script>
<script src="../assets/js/yui-prettify.js"></script>
<script src="../assets/../api.js"></script>
<script src="../assets/js/api-filter.js"></script>
<script src="../assets/js/api-list.js"></script>
<script src="../assets/js/api-search.js"></script>
<script src="../assets/js/apidocs.js"></script>
</body>
</html>
