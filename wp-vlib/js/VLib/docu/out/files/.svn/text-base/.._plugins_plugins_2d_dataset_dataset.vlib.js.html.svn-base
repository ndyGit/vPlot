<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>../plugins/plugins_2d/dataset/dataset.vlib.js</title>
    <link rel="stylesheet" href="http://yui.yahooapis.com/3.9.1/build/cssgrids/cssgrids-min.css">
    <link rel="stylesheet" href="../assets/vendor/prettify/prettify-min.css">
    <link rel="stylesheet" href="../assets/css/main.css" id="site_styles">
    <link rel="shortcut icon" type="image/png" href="../assets/favicon.png">
    <script src="http://yui.yahooapis.com/combo?3.9.1/build/yui/yui-min.js"></script>
</head>
<body class="yui3-skin-sam">

<div id="doc">
    <div id="hd" class="yui3-g header">
        <div class="yui3-u-3-4">
            
                <h1><img src="../assets/css/logo.png" title=""></h1>
            
        </div>
        <div class="yui3-u-1-4 version">
            <em>API Docs for: </em>
        </div>
    </div>
    <div id="bd" class="yui3-g">

        <div class="yui3-u-1-4">
            <div id="docs-sidebar" class="sidebar apidocs">
                <div id="api-list">
    <h2 class="off-left">APIs</h2>
    <div id="api-tabview" class="tabview">
        <ul class="tabs">
            <li><a href="#api-classes">Classes</a></li>
            <li><a href="#api-modules">Modules</a></li>
        </ul>

        <div id="api-tabview-filter">
            <input type="search" id="api-filter" placeholder="Type to filter APIs">
        </div>

        <div id="api-tabview-panel">
            <ul id="api-classes" class="apis classes">
            
                <li><a href="../classes/AbstractPlugin.html">AbstractPlugin</a></li>
            
                <li><a href="../classes/Config.html">Config</a></li>
            
                <li><a href="../classes/Controls.html">Controls</a></li>
            
                <li><a href="../classes/Plot.html">Plot</a></li>
            
                <li><a href="../classes/Plugin 3D.html">Plugin 3D</a></li>
            
                <li><a href="../classes/Plugin Axes.html">Plugin Axes</a></li>
            
                <li><a href="../classes/Plugin BasicMaterial.html">Plugin BasicMaterial</a></li>
            
                <li><a href="../classes/Plugin CameraControl.html">Plugin CameraControl</a></li>
            
                <li><a href="../classes/Plugin Color.html">Plugin Color</a></li>
            
                <li><a href="../classes/Plugin Dataset.html">Plugin Dataset</a></li>
            
                <li><a href="../classes/Plugin File.html">Plugin File</a></li>
            
                <li><a href="../classes/Plugin Function.html">Plugin Function</a></li>
            
                <li><a href="../classes/Plugin Heatmap.html">Plugin Heatmap</a></li>
            
                <li><a href="../classes/Plugin Light.html">Plugin Light</a></li>
            
                <li><a href="../classes/Plugin LinePlot.html">Plugin LinePlot</a></li>
            
                <li><a href="../classes/Plugin Plane.html">Plugin Plane</a></li>
            
                <li><a href="../classes/Plugin ScatterPlot.html">Plugin ScatterPlot</a></li>
            
                <li><a href="../classes/Plugin SurfacePlot.html">Plugin SurfacePlot</a></li>
            
                <li><a href="../classes/Plugin WireframeMaterial.html">Plugin WireframeMaterial</a></li>
            
                <li><a href="../classes/SceneGraph.html">SceneGraph</a></li>
            
                <li><a href="../classes/Templates.html">Templates</a></li>
            
                <li><a href="../classes/Toolbox.html">Toolbox</a></li>
            
                <li><a href="../classes/UTILS.html">UTILS</a></li>
            
                <li><a href="../classes/VLib.html">VLib</a></li>
            
                <li><a href="../classes/VMediator.html">VMediator</a></li>
            
            </ul>

            <ul id="api-modules" class="apis modules">
            
                <li><a href="../modules/Controls.html">Controls</a></li>
            
                <li><a href="../modules/main.html">main</a></li>
            
                <li><a href="../modules/Plot.html">Plot</a></li>
            
                <li><a href="../modules/SceneGraph.html">SceneGraph</a></li>
            
                <li><a href="../modules/Templates.html">Templates</a></li>
            
                <li><a href="../modules/Toolbox.html">Toolbox</a></li>
            
                <li><a href="../modules/VLib.html">VLib</a></li>
            
            </ul>
        </div>
    </div>
</div>

            </div>
        </div>
        <div class="yui3-u-3-4">
                <div id="api-options">
        Show:
        <label for="api-show-inherited">
            <input type="checkbox" id="api-show-inherited" checked>
            Inherited
        </label>

        <label for="api-show-protected">
            <input type="checkbox" id="api-show-protected">
            Protected
        </label>

        <label for="api-show-private">
            <input type="checkbox" id="api-show-private">
            Private
        </label>
        <label for="api-show-deprecated">
            <input type="checkbox" id="api-show-deprecated">
            Deprecated
        </label>

    </div>


            <div class="apidocs">
                <div id="docs-main">
                    <div class="content">
                        <h1 class="file-heading">File: ../plugins/plugins_2d/dataset/dataset.vlib.js</h1>

<div class="file">
    <pre class="code prettyprint linenums">
define([ &#x27;require&#x27;, &#x27;config&#x27;, &#x27;jquery&#x27; ], function(require, Config, $) {

	/**
	 * @return object dataset object.data == dataset object.color ==
	 *         collorCallback(data)
	 *
	 */
	 var plugin = (function() {
	 	/** ********************************** */
	 	/** PUBLIC VARIABLES * */
	 	/** ********************************** */
	 	this.context = Config.PLUGINTYPE.CONTEXT_2D;
	 	this.type = Config.PLUGINTYPE.DATA;
	 	this.name = &#x27;dataset2d&#x27;;
	 	this.accepts = {
	 		predecessors : [ Config.PLUGINTYPE.PLOT],
	 		successors : [Config.PLUGINTYPE.COLOR,Config.PLUGINTYPE.LINETYPE ]
	 	}
		// default color
		this.color = &#x27;#&#x27;+Math.floor(Math.random()*16777215).toString(16);
		this.lineType;
		this.data = [];

		/** path to plugin-template file * */
		this.templates = Config.absPlugins + &#x27;/plugins_2d/dataset/templates.js&#x27;;
		this.icon = Config.absPlugins + &#x27;/plugins_2d/dataset/icon.png&#x27;;
		this.description = &#x27;Requires: [ &#x27;+this.accepts.predecessors.join(&#x27;, &#x27;)+&#x27; ] Accepts: [ &#x27;+this.accepts.successors.join(&#x27;, &#x27;)+&#x27; ]&#x27;;


		/** ********************************** */
		/** PUBLIC METHODS * */
		/** ********************************** */
		/**
		 * Takes inserted configuration from the plugin-template and returns the
		 * parameters as JSON-config-file
		 *
		 * @param containerId
		 *            parent container where the plugin-template got added
		 *
		 * @return config file format: { data:VALUE}
		 */
		 this.getConfigCallback = function(containerId) {

		 	var name = $(&#x27;#&#x27; + containerId + &#x27; &gt; form input[id=dataset-name]&#x27;).val();
		 	var data = $(&#x27;#&#x27; + containerId + &#x27; &gt; form input[id=data]&#x27;).val();
		 	if (data != &quot;&quot;) {
		 		data = JSON.parse(data);
		 	}

		 	var result = {
		 		&#x27;name&#x27; : name,
		 		&#x27;data&#x27; : data
		 	};
		 	console.log(&quot;[ dataset ][getConfig] &quot; + JSON.stringify(result));
		 	return result;
		 }
		/**
		 * Takes arguments from config and inserts them to the plugin-template
		 *
		 * @param config
		 *            plugin config file
		 * @param containerId
		 *            parent container where the plugin-template got added
		 */
		 this.setConfigCallback = function(config, containerId) {
		 	console.log(&quot;[ dataset ][setConfig] &quot; + JSON.stringify(config));
		 	if (config == &quot;&quot; || config === undefined){
		 		config = {data:[]};
		 	}

		 	if (config.data !== undefined) {
		 		$(&#x27;#&#x27; + containerId + &#x27; &gt; form input[id=data]&#x27;).val(JSON.stringify(config.data));
		 	}
		 	if (config.name !== undefined) {
		 		$(&#x27;#&#x27; + containerId + &#x27; &gt; form input[id=dataset-name]&#x27;).val(config.name);
		 	}
		 	//HELPER
		 	var refreshDataTable = function(config){
		 		var c = $(&#x27;#&#x27; + containerId).find(&#x27;#dataTableContainer&#x27;);
		 		c.html(&#x27;&#x27;)
		 		$.each(config.data,function(i,o){
		 			var row = $(&#x27;&lt;tr/&gt;&#x27;);
		 			row.append($(&#x27;&lt;td/&gt;&#x27;).html(o.x));
		 			row.append($(&#x27;&lt;td/&gt;&#x27;).html(o.y));
		 			row.append($(&#x27;&lt;td/&gt;&#x27;).html(&#x27;&lt;button id=&quot;&#x27;+i+&#x27;&quot; type=&quot;button&quot; class=&quot;deleteData ui-state-default ui-corner-all&quot;&gt;&lt;span class=&quot;ui-icon ui-icon-close&quot;&gt;&lt;/span&gt;&lt;/button&gt;&#x27;));
		 			c.append(row);
		 		});
		 		// delete handle
		 		$(&#x27;#&#x27;+containerId).find(&#x27;.deleteData&#x27;).click(function(){
		 			var index = $(this).attr(&#x27;id&#x27;);
		 			config.data.splice(index,1);
		 			//update container
		 			$(&#x27;#&#x27; + containerId + &#x27; &gt; form input[id=data]&#x27;).val(JSON.stringify(config.data));
		 			refreshDataTable(config);
		 		});


		 	}
		 	// add handle
		 	$(&#x27;#&#x27;+containerId).find(&#x27;#addDataset&#x27;).click(function(){
		 		var x = $(&#x27;#&#x27;+containerId).find(&#x27;#dataset-x&#x27;);
		 		var y = $(&#x27;#&#x27;+containerId).find(&#x27;#dataset-y&#x27;);
		 		if(x.val() == &#x27;&#x27; || y.val() == &#x27;&#x27; ) return;

		 		var dataset = {&#x27;x&#x27;:x.val(),&#x27;y&#x27;:y.val()};
		 		if(config.data === undefined)
		 			config.data = [];
		 		config.data.push(dataset);
		 			//update container
		 			$(&#x27;#&#x27; + containerId + &#x27; &gt; form input[id=data]&#x27;).val(JSON.stringify(config.data));
		 			x.val(&#x27;&#x27;);
		 			y.val(&#x27;&#x27;);

		 			refreshDataTable(config);
		 		});
		 	// fill table
		 	refreshDataTable(config);



		 }

		 this.exec = function(config, childs) {
		 	console.log(&quot;[ dataset ] \t\t EXEC&quot;);

		 	/** *********************************** * */
		 	/** HANDLE CONFIG * */
		 	/** *********************************** * */
		 	if (config.data === undefined)
		 		return;


		 	var data = [];

		 	if (config.data) {
		 		data = data.concat(config.data);
		 	}


		 	/** *********************************** * */
		 	/** HANDLE SUCCESSOR PLUGINGS * */
		 	/** *********************************** * */
		 	var colorCallback 	= null;
		 	var colorCallbackObj = null;
		 	var child;
			for ( var i = 0; i &lt; childs.length; ++i) {
				child = childs[i];
				if(child !== undefined &amp;&amp; child.pType !== undefined){
					if($.inArray(child.pType, this.accepts.successors) != -1){
						switch(child.pType){
							case Config.PLUGINTYPE.COLOR:
								this.color = child.response.color;
							break;
							case Config.PLUGINTYPE.LINETYPE:
								this.lineType = child.response.type;
							break;
						}
					}
				}else{
					console.log(&quot;pType of child plugin not set!&quot;);
				}
			}
			// each child is the result of a successor plugin
			// for ( var i = 0; i &lt; childs.length; ++i) {
			// 	for ( var key in childs[i]) {
			// 		// check if child is in successor list

			// 		if ($.inArray(key, this.accepts.successors) != -1) {
			// 			// handle color plugin
			// 			if (( Config.PLUGINTYPE.COLOR ) === key) {
			// 				this.color = childs[i][key].color;
			// 			}
			// 			if (( Config.PLUGINTYPE.LINETYPE ) === key) {
			// 				this.lineType = childs[i][key].type;
			// 			}
			// 		}
			// 	}
			// }

			if(config.name == &#x27;&#x27;){
				config.name = &#x27;dataset_&#x27;+Math.floor((Math.random()*100)+1);;
			}

			if(this.lineType === undefined){
				this.lineType = {area:false,bar:false};
			}
			this.data = {
				area: this.lineType.area === undefined ? false : this.lineType.area,
				bar : this.lineType.bar === undefined ? false : this.lineType.bar,
				values: config.data,
				key: config.name,
				color: this.color

			};

			return {
				pType : this.type,
				response : {
					context : this
				}
			};

		}



		/** ********************************** */
		/** PRIVATE METHODS * */
		/** ********************************** */


	});

return plugin;

});

    </pre>
</div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="../assets/vendor/prettify/prettify-min.js"></script>
<script>prettyPrint();</script>
<script src="../assets/js/yui-prettify.js"></script>
<script src="../assets/../api.js"></script>
<script src="../assets/js/api-filter.js"></script>
<script src="../assets/js/api-list.js"></script>
<script src="../assets/js/api-search.js"></script>
<script src="../assets/js/apidocs.js"></script>
</body>
</html>
